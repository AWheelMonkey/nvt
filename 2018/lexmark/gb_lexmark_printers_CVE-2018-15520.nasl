##############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_lexmark_printers_CVE-2018-15520.nasl 12212 2018-11-05 09:42:23Z ckuersteiner $
#
# Lexmark Printer Buffer Overflow Vulnerability (CVE-2018-15520)
#
# Authors:
# Christian Kuersteiner <christian.kuersteiner@greenbone.net>
#
# Copyright:
# Copyright (c) 2018 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.141645");
  script_version("$Revision: 12212 $");
  script_tag(name:"last_modification", value:"$Date: 2018-11-05 10:42:23 +0100 (Mon, 05 Nov 2018) $");
  script_tag(name:"creation_date", value:"2018-11-05 15:08:33 +0700 (Mon, 05 Nov 2018)");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");

  script_cve_id("CVE-2018-15520");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Lexmark Printer Buffer Overflow Vulnerability (CVE-2018-15520)");

  script_category(ACT_GATHER_INFO);

  script_copyright("This script is Copyright (C) 2018 Greenbone Networks GmbH");
  script_family("General");
  script_dependencies("gb_lexmark_printers_detect.nasl");
  script_mandatory_keys("lexmark_printer/installed", "lexmark_model");

  script_tag(name:"summary", value:"Multiple Lexmark printers are prone to a buffer overflow vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable firmware version is present on the target host.");

  script_tag(name:"insight", value:"This vulnerability allows an attacker with crafted fax data to attack a
Lexmark multifunction device.");

  script_tag(name:"impact", value:"This vulnerability allows a remote attacker to crash the device, creating a
denial of service condition, or possibly to have unspecified other impact via crafted color fax data. ");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");

  script_xref(name:"URL", value:"http://support.lexmark.com/index?page=content&id=TE892");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (!model = get_kb_item("lexmark_model"))
  exit(0);

cpe = 'cpe:/h:lexmark:' + tolower(model);
if (!version = get_app_version(cpe: cpe, nofork: TRUE))
  exit(0);

if (model =~ "^(CX82|CX860|XC6152|XC8155|XC8160)") {
  if (version_is_less(version: version, test_version: "CXTPP.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "CXTPP.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "CXTPP.052.200", test_version2: "CXTPP.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(CX72|XC41.0)") {
   if (version_is_less(version: version, test_version: "CXTAT.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "CXTAT.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "CXTAT.052.200", test_version2: "CXTAT.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(CX92|XC92.5)") {
  if (version_is_less(version: version, test_version: "CXTMH.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "CXTMH.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "CXTMH.052.200", test_version2: "CXTMH.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX321|MB2338)") {
  if (version_is_less(version: version, test_version: "MXNGM.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "MXNGM.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "MXNGM.052.200", test_version2: "MXNGM.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX42|MX52|MX622|MB2442|MB2546|MB2650|XM124|XM3250)") {
  if (version_is_less(version: version, test_version: "MXTGM.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "MXTGM.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "MXTGM.052.200", test_version2: "MXTGM.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX72|MX82|MB2770|XM5370|XM7355|XM7370)") {
  if (version_is_less(version: version, test_version: "MXTGW.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "MXTGW.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "MXTGW.052.200", test_version2: "MXTGW.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(CX421|MC2325|MC2425)") {
  if (version_is_less(version: version, test_version: "CXNZJ.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "CXNZJ.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "CXNZJ.052.200", test_version2: "CXNZJ.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(CX522|CX62x|MC2535|MC2640|XC2235|XC4240)") {
  if (version_is_less(version: version, test_version: "CXTZJ.052.025")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "CXTZJ.052.025");
    security_message(port: 0, data: report);
    exit(0);
  }
  else if (version_in_range(version: version, test_version: "CXTZJ.052.200", test_version2: "CXTZJ.052.204")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "None");
    security_message(port: 0, data: report);
    exit(0);
  }
}

exit(99);
