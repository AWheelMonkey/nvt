###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_junos_cve-2015-7752.nasl 11291 2018-09-07 14:48:41Z mmartin $
#
# Junos SSH Denial of Service Vulnerability
#
# Authors:
# Christian Kuersteiner <christian.kuersteiner@greenbone.net>
#
# Copyright:
# Copyright (c) 2015 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = 'cpe:/o:juniper:junos';

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.106038");
  script_version("$Revision: 11291 $");
  script_tag(name:"last_modification", value:"$Date: 2018-09-07 16:48:41 +0200 (Fri, 07 Sep 2018) $");
  script_tag(name:"creation_date", value:"2015-11-23 10:20:35 +0700 (Mon, 23 Nov 2015)");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");

  script_tag(name:"qod_type", value:"package");

  script_tag(name:"solution_type", value:"VendorFix");

  script_cve_id("CVE-2015-7752");

  script_name("Junos SSH Denial of Service Vulnerability");

  script_category(ACT_GATHER_INFO);

  script_family("JunOS Local Security Checks");
  script_copyright("This script is Copyright (C) 2015 Greenbone Networks GmbH");
  script_dependencies("gb_ssh_junos_get_version.nasl", "gb_junos_snmp_version.nasl");
  script_mandatory_keys("Junos/Version");

  script_tag(name:"summary", value:"Junos OS is prone to Denial of Service vulnerability on the SSH
server.");

  script_tag(name:"vuldetect", value:"Check the OS build.");

  script_tag(name:"insight", value:"The SSH server used in Junos allows an unauthenticated remote
attacker to consume large amounts of CPU time prior to authentication, possibly leading to a partial
DoS attack. The attacker must be able to reach the device via SSH through any existing access lists
or firewall filters, and the issue only occurs if SSH is enabled.");

  script_tag(name:"impact", value:"An unauthenticated remote attacker can leverage a DoS attack.");

  script_tag(name:"affected", value:"Junos OS 12.1, 12.3, 13.2, 13.3, 14.1 and 14.2");

  script_tag(name:"solution", value:"New builds of Junos OS software are available from Juniper.");

  script_xref(name:"URL", value:"http://kb.juniper.net/JSA10708");

  exit(0);
}

include("host_details.inc");
include("revisions-lib.inc");

if (!version = get_app_version(cpe: CPE, nofork: TRUE))
  exit(0);

if (version =~ "^12") {
  if ((revcomp(a: version, b: "12.1X44-D50") < 0) &&
      (revcomp(a: version, b: "12.1X44") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "12.1X46-D35") < 0) &&
           (revcomp(a: version, b: "12.1X46") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "12.1X47-D25") < 0) &&
           (revcomp(a: version, b: "12.1X47") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "12.3R10") < 0) &&
           (revcomp(a: version, b: "12.3") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "12.3X48-D10") < 0) &&
           (revcomp(a: version, b: "12.3X") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
}

if (version =~ "^13") {
  if (revcomp(a: version, b: "13.2R8") < 0) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "13.2X51-D35") < 0) &&
           (revcomp(a: version, b: "13.2X") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "13.3R6") < 0) &&
           (revcomp(a: version, b: "13.3") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
}

if (version =~ "^14") {
   if (revcomp(a: version, b: "14.1R5") < 0) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "14.1X53-D25") < 0) &&
           (revcomp(a: version, b: "14.1X") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
  else if ((revcomp(a: version, b: "14.2R3") < 0) &&
           (revcomp(a: version, b: "14.2") >= 0)) {
    security_message(port: 0, data: version);
    exit(0);
  }
}

exit(99);
