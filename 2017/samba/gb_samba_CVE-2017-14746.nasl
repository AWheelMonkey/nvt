###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_samba_CVE-2017-14746.nasl 11983 2018-10-19 10:04:45Z mmartin $
#
# Samba Server 'CVE-2017-14746' Use-after-free Vulnerability
#
# Authors:
# Christian Fischer <christian.fischer@greenbone.net>
#
# Copyright:
# Copyright (c) 2017 Greenbone Networks GmbH
# Text descriptions are largely excerpted from the referenced
# advisory, and are Copyright (c) the respective author(s)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = "cpe:/a:samba:samba";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.108294");
  script_version("$Revision: 11983 $");
  script_cve_id("CVE-2017-14746");
  script_bugtraq_id(101907);
  script_tag(name:"cvss_base", value:"7.5");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:P/I:P/A:P");
  script_tag(name:"last_modification", value:"$Date: 2018-10-19 12:04:45 +0200 (Fri, 19 Oct 2018) $");
  script_tag(name:"creation_date", value:"2017-11-23 07:09:22 +0100 (Thu, 23 Nov 2017)");
  script_name("Samba Server 'CVE-2017-14746' Use-after-free Vulnerability");
  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (c) 2017 Greenbone Networks GmbH");
  script_family("General");
  script_dependencies("smb_nativelanman.nasl", "gb_samba_detect.nasl", "gb_smb_version_detect.nasl");
  script_mandatory_keys("samba/smb_or_ssh/detected");

  script_xref(name:"URL", value:"https://www.samba.org/samba/security/CVE-2017-14746.html");

  script_tag(name:"summary", value:"This host is running Samba and is prone to a
  use-after-free vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"The flaw exists due to a client which may use an SMB1
  request to manipulate the contents of heap space.");

  script_tag(name:"impact", value:"A malicious SMB1 request can be used to control the contents
  of heap memory via a deallocated heap pointer. It is possible this may be used to compromise
  the SMB server.");

  script_tag(name:"affected", value:"Samba versions 4.0.0 to 4.5.14, 4.6.x prior to 4.6.11, 4.7.x
  prior to 4.7.3 with enabled SMBv1 support.");

  script_tag(name:"solution", value:"Update to Samba 4.5.15, 4.6.11, 4.7.3 or later.  Workaround:

  Prevent SMB1 access to the server by setting the parameter:

  server min protocol = SMB2

  to the [global] section of your smb.conf and restart smbd. This prevents a SMB1 access to the
  server. Note this could cause older clients to be unable to connect to the server.");

  script_tag(name:"solution_type", value:"VendorFix");
  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_xref(name:"URL", value:"https://www.samba.org");
  exit(0);
}

include("version_func.inc");
include("host_details.inc");

if( isnull( port = get_app_port( cpe:CPE ) ) ) exit( 0 );
if( ! infos = get_app_version_and_location( cpe:CPE, port:port, exit_no_version:TRUE ) ) exit( 0 );
vers = infos['version'];
loc = infos['location'];

# Workaround is to disable SMBv1 support
if( ! get_kb_item( "smb_v1/supported" ) ) exit( 0 );

if( version_in_range( version:vers, test_version:"4.0.0", test_version2:"4.5.14" ) ) {
  fix = "4.5.15";
} else if( version_in_range( version:vers, test_version:"4.6.0", test_version2:"4.6.10" ) ) {
  fix = "4.6.11";
} else if( version_in_range( version:vers, test_version:"4.7.0", test_version2:"4.7.2" ) ) {
  fix = "4.7.3";
}

if( fix ) {
  report = report_fixed_ver( installed_version:vers, fixed_version:fix, install_path:loc );
  security_message( port:port, data:report );
  exit( 0 );
}

exit( 99 );
