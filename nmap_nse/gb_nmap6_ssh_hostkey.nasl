###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_nmap6_ssh_hostkey.nasl 11528 2018-09-21 16:15:13Z cfischer $
#
# Autogenerated NSE wrapper
#
# Authors:
# NSE-Script: Sven Klemm
# NASL-Wrapper: autogenerated
#
# Copyright:
# NSE-Script: The Nmap Security Scanner (http://nmap.org)
# Copyright (C) 2013 Greenbone Networks GmbH, http://www.greenbone.net
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.803553");
  script_version("$Revision: 11528 $");
  script_tag(name:"cvss_base", value:"0.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:N");
  script_tag(name:"last_modification", value:"$Date: 2018-09-21 18:15:13 +0200 (Fri, 21 Sep 2018) $");
  script_tag(name:"creation_date", value:"2013-02-28 19:00:42 +0530 (Thu, 28 Feb 2013)");
  script_name("Nmap NSE 6.01: ssh-hostkey");
  script_category(ACT_ATTACK);
  script_tag(name:"qod_type", value:"remote_analysis");
  script_copyright("NSE-Script: The Nmap Security Scanner; NASL-Wrapper: Greenbone Networks GmbH");
  script_family("Nmap NSE");
  script_dependencies("ssh_detect.nasl", "nmap_nse.nasl");
  script_require_ports("Services/ssh", 22);
  script_mandatory_keys("Tools/Present/nmap6.01", "Tools/Launch/nmap_nse");

  script_add_preference(name:"ssh_hostkey", value:"", type:"entry");

  script_tag(name:"summary", value:"Shows SSH hostkeys.

Shows the target SSH server's key fingerprint and (with high enough verbosity level) the public key
itself.  It records the discovered host keys in 'nmap.registry' for use by other scripts.
Output can be controlled with the 'ssh_hostkey' script argument.

The script also includes a postrule that check for duplicate hosts using the gathered keys.


SYNTAX:

ssh_hostkey:  Controls the output format of keys. Multiple values may be
given, separated by spaces. Possible values are

  - ''full'': The entire key, not just the fingerprint.

  - ''bubble'': Bubble Babble output,

  - ''visual'': Visual ASCII art representation.

  - ''all'': All of the above.");

  exit(0);
}

include("ssh_func.inc");

i = 0;

pref = script_get_preference("ssh_hostkey");
if (!isnull(pref) && pref != "") {
  args[i++] = string('"', 'ssh_hostkey', '=', pref, '"');
}

port = get_ssh_port(default:22);

argv = make_list("nmap", "--script=ssh-hostkey.nse", "-p", port, get_host_ip());

if(i > 0)
{
  scriptArgs= "--script-args=";
  foreach arg(args) {
    scriptArgs += arg + ",";
  }
  argv = make_list(argv,scriptArgs);
}

res = pread(cmd: "nmap", argv: argv);

if(res)
{
  foreach line (split(res))
  {
    if(ereg(pattern:"^\|",string:line)) {
      result +=  substr(chomp(line),2) + '\n';
    }

    error = eregmatch(string:line, pattern:"^nmap: (.*)$");
    if (error) {
      msg = string('Nmap command failed with following error message:\n', line);
      log_message(data : msg, port:port);
    }
  }

  if("ssh-hostkey" >< result) {
    msg = string('Result found by Nmap Security Scanner (ssh-hostkey.nse) ',
                'http://nmap.org:\n\n', result);
    log_message(data : msg, port:port);
  }
}
else
{
  msg = string('Nmap command failed entirely:\n', 'nmap ', argv);
  log_message(data: msg, port:port);
}
