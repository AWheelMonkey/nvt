###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_nmap6_upnp_info.nasl 10595 2018-07-24 13:51:36Z cfischer $
#
# Autogenerated NSE wrapper
#
# Authors:
# NSE-Script: Thomas Buchanan
# NASL-Wrapper: autogenerated
#
# Copyright:
# NSE-Script: The Nmap Security Scanner (http://nmap.org)
# Copyright (C) 2013 Greenbone Networks GmbH, http://www.greenbone.net
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.803535");
  script_version("$Revision: 10595 $");
  script_tag(name:"cvss_base", value:"5.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:P");
  script_tag(name:"last_modification", value:"$Date: 2018-07-24 15:51:36 +0200 (Tue, 24 Jul 2018) $");
  script_tag(name:"creation_date", value:"2013-02-28 19:00:24 +0530 (Thu, 28 Feb 2013)");
  script_name("Nmap NSE 6.01: upnp-info");
  script_category(ACT_ATTACK);
  script_tag(name:"qod_type", value:"remote_analysis");
  script_copyright("NSE-Script: The Nmap Security Scanner; NASL-Wrapper: Greenbone Networks GmbH");
  script_family("Nmap NSE");
  script_dependencies("nmap_nse.nasl", "gb_upnp_detect.nasl");
  script_require_udp_ports("Services/udp/upnp", 1900);
  script_mandatory_keys("Tools/Present/nmap6.01", "Tools/Launch/nmap_nse");

  script_add_preference(name:"upnp-info.override", value:"", type:"entry");

  script_tag(name:"summary", value:"Attempts to extract system information from the UPnP service.


SYNTAX:

upnp-info.override:  Controls whether we override the IP address information
returned by the UPNP service for the location of the XML
file that describes the device.  Defaults to true for
unicast hosts.");

  exit(0);
}

i = 0;

pref = script_get_preference("upnp-info.override");
if (!isnull(pref) && pref != "") {
  args[i++] = string('"', 'upnp-info.override', '=', pref, '"');
}

port = get_kb_item("Services/udp/upnp");
if(!port) port = 1900;
if(!get_udp_port_state(port)) exit(0);

argv = make_list("nmap", "-sU", "--script=upnp-info.nse", "-p", port, get_host_ip());

if(i > 0)
{
  scriptArgs= "--script-args=";
  foreach arg(args) {
    scriptArgs += arg + ",";
  }
  argv = make_list(argv,scriptArgs);
}

res = pread(cmd: "nmap", argv: argv);

if(res)
{
  foreach line (split(res))
  {
    if(ereg(pattern:"^\|",string:line)) {
      result +=  substr(chomp(line),2) + '\n';
    }

    error = eregmatch(string:line, pattern:"^nmap: (.*)$");
    if (error) {
      msg = string('Nmap command failed with following error message:\n', line);
      log_message(data : msg, port:port);
    }
  }

  if("upnp-info" >< result) {
    msg = string('Result found by Nmap Security Scanner (upnp-info.nse) ',
                'http://nmap.org:\n\n', result);
    security_message(data : msg, port:port);
  }
}
else
{
  msg = string('Nmap command failed entirely:\n', 'nmap ', argv);
  log_message(data: msg, port:port);
}
