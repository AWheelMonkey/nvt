###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_junos_cve-2004-0468.nasl 12014 2018-10-22 10:01:47Z mmartin $
#
# Junos CVE-2004-0468
#
# Authors:
# Thomas Rotter <thomas.rotter@greenbone.net>
#
# Copyright:
# Copyright (c) 2011 Greenbone Networks GmbH, http://www.greenbone.net
#
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.96209");
  script_version("$Revision: 12014 $");
  script_tag(name:"last_modification", value:"$Date: 2018-10-22 12:01:47 +0200 (Mon, 22 Oct 2018) $");
  script_tag(name:"creation_date", value:"2011-07-13 11:48:37 +0200 (Wed, 13 Jul 2011)");
  script_tag(name:"cvss_base", value:"5.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:P");

  script_tag(name:"qod_type", value:"package");

  script_cve_id("CVE-2004-0468");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Junos CVE-2004-0468");


  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (c) 2011 Greenbone Networks GmbH");
  script_family("JunOS Local Security Checks");
  script_dependencies("gb_ssh_junos_get_version.nasl", "gb_junos_snmp_version.nasl");
  script_mandatory_keys("Junos/Version");

  script_tag(name:"summary", value:"Memory leak in Juniper JUNOS Packet Forwarding Engine (PFE)
allows remote attackers to cause a denial of service (memory exhaustion and device reboot) via certain
IPv6 packets.");


  exit(0);
}

build = get_kb_item("Junos/Build");
if (!build) exit(0);

val = split(build, sep:" ", keep:0);
val = split(val[0], sep:"-", keep:0);

if (val[0] <= 2004){
  if (val[1] < 6){
    security_message(port:0);
    exit(0);
  }
  else if (val[1] = 6 && val[2] <= 19){
    security_message(port:0);
  }
}

exit(99);
