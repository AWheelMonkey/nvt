###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_cisco_nx_os_Cisco-SA-20150901-CVE-2015-6277.nasl 12096 2018-10-25 12:26:02Z asteins $
#
# Cisco NX-OS Malformed ARP Header Denial of Service Vulnerability
#
# Authors:
# Michael Meyer <michael.meyer@greenbone.net>
#
# Copyright:
# Copyright (c) 2016 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = "cpe:/o:cisco:nx-os";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.105698");
  script_cve_id("CVE-2015-6277");
  script_tag(name:"cvss_base", value:"6.1");
  script_tag(name:"cvss_base_vector", value:"AV:A/AC:L/Au:N/C:N/I:N/A:C");
  script_version("$Revision: 12096 $");

  script_name("Cisco NX-OS Malformed ARP Header Denial of Service Vulnerability");

  script_xref(name:"URL", value:"http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/Cisco-SA-20150901-CVE-2015-6277");


  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");
  script_tag(name:"summary", value:"A vulnerability in Address Resolution Protocol (ARP) feature of the Cisco Nexus Operating System (NX-
OS) could allow an unauthenticated, adjacent attacker to cause a partial denial of service (DoS)
condition because the ARP process unexpectedly restarts.

The vulnerability is due to improper input validation of the fields in the ARP packet header. An
attacker could exploit this vulnerability by sending a crafted ARP packet from an adjacent network
to the affected device. An exploit could allow the attacker to cause a partial DoS condition because
the ARP process could unexpectedly restart when processing the crafted ARP packet.

Cisco has confirmed the vulnerability and software updates are available.


To exploit this vulnerability, an attacker must have access to the same broadcast or collision
domain as the targeted device. This access requirement may reduce the likelihood of a
successful exploit.

Although the CVSS indicates that software updates are not available to fix this vulnerability, there
are known fixed releases available for Cisco bug IDs CSCut25292.");

  script_tag(name:"qod_type", value:"package");
  script_tag(name:"solution_type", value:"VendorFix");

  script_tag(name:"last_modification", value:"$Date: 2018-10-25 14:26:02 +0200 (Thu, 25 Oct 2018) $");
  script_tag(name:"creation_date", value:"2016-05-12 16:06:13 +0200 (Thu, 12 May 2016)");
  script_category(ACT_GATHER_INFO);
  script_family("CISCO");
  script_copyright("This script is Copyright (C) 2016 Greenbone Networks GmbH");
  script_dependencies("gb_cisco_nx_os_version.nasl");
  script_mandatory_keys("cisco_nx_os/version", "cisco_nx_os/model", "cisco_nx_os/device");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if( ! version = get_app_version( cpe:CPE ) ) exit( 0 );

if( ! device = get_kb_item( "cisco_nx_os/device" ) ) exit( 0 );
if( "Nexus" >!< device ) exit( 0 );

if ( ! nx_model = get_kb_item( "cisco_nx_os/model" ) ) exit( 0 );

if( "1000V" >< nx_model )
{
  affected = make_list(
			"5.2(1)SV3(1.4)"
		);
}

if( nx_model =~ "^3[0-9]+" )
{
  affected = make_list(
			"7.3(0)ZD(0.47)"
		);
}

if( nx_model =~ "^4[0-9]+" )
{
  affected = make_list(
			"4.1(2)E1(1c)"
		);
}

if( nx_model =~ "^N9K" )
{
  affected = make_list(
			"7.3(0)ZD(0.61)"
		);
}


foreach af ( affected )
{
  if( version == af )
  {
    report = report_fixed_ver(  installed_version:version, fixed_version: "See advisory" );
    security_message( port:0, data:report );
    exit( 0 );
  }
}

exit( 99 );

