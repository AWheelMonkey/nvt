###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_cisco_ios_xr_Cisco-SA-20150611-CVE-2015-0769.nasl 11640 2018-09-27 07:15:20Z asteins $
#
# Cisco IOS XR Software Crafted IPv6 Packet Denial of Service Vulnerability
#
# Authors:
# Michael Meyer <michael.meyer@greenbone.net>
#
# Copyright:
# Copyright (c) 2016 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = "cpe:/o:cisco:ios_xr";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.105687");
  script_cve_id("CVE-2015-0769");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");
  script_version("$Revision: 11640 $");

  script_name("Cisco IOS XR Software Crafted IPv6 Packet Denial of Service Vulnerability");

  script_xref(name:"URL", value:"http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/Cisco-SA-20150611-CVE-2015-0769");
  script_xref(name:"URL", value:"http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20150611-iosxr");


  script_tag(name:"vuldetect", value:"Check the version.");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");
  script_tag(name:"summary", value:"A vulnerability in the IP version 6 (IPv6) processing code of Cisco IOS XR Software for
Cisco CRS-3 Carrier Routing System could allow an unauthenticated,
remote attacker to trigger an ASIC scan of the Network Processor Unit (NPU) and a reload of the
line
card processing an IPv6 packet.

The vulnerability is due
to incorrect processing of an IPv6 packet carrying IPv6 extension
headers that are valid but unlikely to be seen during normal operation. An attacker
could exploit
this vulnerability by sending such an IPv6 packet to an
affected device that is configured to process IPv6 traffic. An exploit
could allow the attacker to cause a reload of the line card, resulting
in a DoS condition.

Cisco has confirmed the vulnerability in a security advisory and released software updates.


To exploit this vulnerability, an attacker may need to acquire additional information about the targeted device, such as whether the device has specific line cards installed and configured to process IPv6 traffic in addition to running an affected release of Cisco IOS XR Software. An attacker cannot exploit this vulnerability if these conditions are not met.

A successful exploit of this vulnerability could cause a widespread availability impact to systems that rely on an affected device for traffic forwarding.

Cisco indicates through the CVSS score that functional exploit code exists; however, the code is not known to be publicly available.");

  script_tag(name:"qod_type", value:"package");
  script_tag(name:"solution_type", value:"VendorFix");

  script_tag(name:"last_modification", value:"$Date: 2018-09-27 09:15:20 +0200 (Thu, 27 Sep 2018) $");
  script_tag(name:"creation_date", value:"2016-05-10 14:02:14 +0200 (Tue, 10 May 2016)");
  script_category(ACT_GATHER_INFO);
  script_family("CISCO");
  script_copyright("This script is Copyright (C) 2016 Greenbone Networks GmbH");
  script_dependencies("gb_cisco_ios_xr_version.nasl");
  script_mandatory_keys("cisco/ios_xr/version");
 exit(0);
}

include("host_details.inc");
include("version_func.inc");

if( ! version = get_app_version( cpe:CPE ) ) exit( 0 );

affected = make_list(
		'4.0.1',
		'4.0.2',
		'4.0.3',
		'4.0.4',
		'4.0.11',
		'4.1 Base',
		'4.1.0',
		'4.1.1',
		'4.1.2',
		'4.2.0' );

foreach af ( affected )
{
  if( version == af )
  {
    report = report_fixed_ver(  installed_version:version, fixed_version: "See advisory" );
    security_message( port:0, data:report );
    exit( 0 );
  }
}

exit( 99 );

