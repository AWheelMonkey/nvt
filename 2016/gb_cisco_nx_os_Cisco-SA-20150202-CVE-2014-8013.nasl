###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_cisco_nx_os_Cisco-SA-20150202-CVE-2014-8013.nasl 11614 2018-09-26 07:39:28Z asteins $
#
# Cisco NX-OS Software TACACS+ Command Authorization Vulnerability
#
# Authors:
# Michael Meyer <michael.meyer@greenbone.net>
#
# Copyright:
# Copyright (c) 2016 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = "cpe:/o:cisco:nx-os";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.105709");
  script_cve_id("CVE-2014-8013");
  script_tag(name:"cvss_base", value:"4.9");
  script_tag(name:"cvss_base_vector", value:"AV:L/AC:L/Au:N/C:N/I:N/A:C");
  script_version("$Revision: 11614 $");

  script_name("Cisco NX-OS Software TACACS+ Command Authorization Vulnerability");

  script_xref(name:"URL", value:"http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/Cisco-SA-20150202-CVE-2014-8013");


  script_tag(name:"vuldetect", value:"Check the version.");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");
  script_tag(name:"summary", value:"A vulnerability in the TACACS+ command authorization feature of Cisco NX-OS Software could allow an
authenticated, local attacker to cause the system to reset.

The vulnerability is due to incorrect processing of very long command-line interface (CLI) commands
by the TACACS+ command authorization feature. An attacker could exploit this vulnerability by being
locally authenticated and executing a long CLI command that is subject to command authorization. An
exploit could allow the attacker to cause the device to reload.

Cisco has confirmed the vulnerability in a security notice and released software updates.


To exploit this vulnerability, an attacker must authenticate and have local access to a targeted
system. These requirements would likely reduce the possibility of a successful exploit.

Cisco indicates through the CVSS score that functional exploit code exists; however, the code is not
known to be publicly available.");

  script_tag(name:"qod_type", value:"package");
  script_tag(name:"solution_type", value:"VendorFix");

  script_tag(name:"last_modification", value:"$Date: 2018-09-26 09:39:28 +0200 (Wed, 26 Sep 2018) $");
  script_tag(name:"creation_date", value:"2016-05-12 16:27:32 +0200 (Thu, 12 May 2016)");
  script_category(ACT_GATHER_INFO);
  script_family("CISCO");
  script_copyright("This script is Copyright (C) 2016 Greenbone Networks GmbH");
  script_dependencies("gb_cisco_nx_os_version.nasl");
  script_mandatory_keys("cisco_nx_os/version", "cisco_nx_os/model", "cisco_nx_os/device");

 exit(0);
}

include("host_details.inc");
include("version_func.inc");

if( ! version = get_app_version( cpe:CPE ) ) exit( 0 );

if( ! device = get_kb_item( "cisco_nx_os/device" ) ) exit( 0 );
if( "Nexus" >!< device ) exit( 0 );

if ( ! nx_model = get_kb_item( "cisco_nx_os/model" ) ) exit( 0 );

if( nx_model =~ "^3[0-9]+" )
{
  affected = make_list(
			"6.0(2)U4(3)"
		);
}

if( nx_model =~ "^5[0-9]+" )
{
  affected = make_list(
			"7.0(0)N1(1)"
		);
}

if( nx_model =~ "^7[0-9]+" )
{
  affected = make_list(
			"6.2(10)",
			"6.2(8a)",
			"6.2(8b)"
		);
}

if( nx_model =~ "^N9K" )
{
  affected = make_list(
			"6.1(2)I2(3)"
		);
}


foreach af ( affected )
{
  if( version == af )
  {
    report = report_fixed_ver(  installed_version:version, fixed_version: "See advisory" );
    security_message( port:0, data:report );
    exit( 0 );
  }
}

exit( 99 );

