###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_libupnp_cve-2016-6255.nasl 11026 2018-08-17 08:52:26Z cfischer $
#
# libupnp Unhandled POST Write Vulnerability
#
# Authors:
# Christian Kuersteiner <christian.kuersteiner@greenbone.net>
#
# Copyright:
# Copyright (c) 2016 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

CPE = "cpe:/a:libupnp_project:libupnp";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.106155");
  script_name("libupnp Unhandled POST Write Vulnerability");
  script_version("$Revision: 11026 $");
  script_tag(name:"last_modification", value:"$Date: 2018-08-17 10:52:26 +0200 (Fri, 17 Aug 2018) $");
  script_tag(name:"creation_date", value:"2016-07-27 15:23:00 +0700 (Wed, 27 Jul 2016)");
  script_tag(name:"cvss_base", value:"5.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:P/A:N");
  script_cve_id("CVE-2016-6255");
  script_category(ACT_ATTACK);
  script_copyright("This script is Copyright (C) 2016 Greenbone Networks GmbH");
  script_family("Web application abuses");
  script_dependencies("gb_libupnp_detect.nasl");
  script_mandatory_keys("libupnp/installed");

  script_xref(name:"URL", value:"http://www.openwall.com/lists/oss-security/2016/07/20/5");
  script_xref(name:"URL", value:"http://pupnp.sourceforge.net/ChangeLog");

  script_tag(name:"summary", value:"libupnp is prone to a unhandled POST write vulnerability");

  script_tag(name:"vuldetect", value:"Tries to write a file und retrieve it again.");

  script_tag(name:"insight", value:"If there's no registered handler for a POST request, the default
  behaviour is to write it to the filesystem. Therefore it is possible to write arbitrary files to it.");

  script_tag(name:"impact", value:"An unauthenticated attacker may write arbitrary files to the filesystem.");

  script_tag(name:"solution", value:"Upgrade to version 1.6.21 or later,
  For updates refer to http://pupnp.sourceforge.net/");

  script_tag(name:"qod_type", value:"exploit");
  script_tag(name:"solution_type", value:"VendorFix");

  exit(0);
}

include("host_details.inc");
include("http_func.inc");
include("http_keepalive.inc");
include("misc_func.inc");

if( ! port = get_app_port( cpe:CPE, service:"www" ) ) exit( 0 );
if( ! infos = get_app_location_and_proto( cpe:CPE, port:port ) ) exit( 0 );

proto = infos["proto"];

file = '/openvas_cve_2016_6255.test';
data = 'openvas_' + rand();

req  = http_post_req( port:port, url:file, data:data,
                      add_headers:make_array( "Content-Type", "application/x-www-form-urlencoded" ) );
res = http_keepalive_send_recv( port:port, data:req );

if( res !~ "HTTP/1\.. 200" ) exit( 0 );

if( http_vuln_check( port:port, url:file, pattern:data, check_header:TRUE ) ) {
  report = report_vuln_url( port:port, url:file );
  report += "\n\nPlease delete this uploaded test file.";
  security_message( port:port, data:report, proto:proto );
  exit( 0 );
}

exit( 99 );
